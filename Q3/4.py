# -*- coding: UTF-8 -*-
import pandas as pd

data = pd.read_excel(r".\7.xlsx")

k = [0.15808431902506123, 1.649484536082474, 0.2702049570300109, 0.5298438725963999, 0.17190339759208245, 0.23601851851851843, 0.032529319221967924, 0.4084680903946159, 0.03126923076923077, 0.16758918918918916, 0.8828262702122772, 0.19045662437297134, 0.5127462415863422, 0.16238095238095238, 0.08098035238477108, 0.4358747593940915, 0.0640209646890537, 0.06967629815745399, 0.34097893432465876, 0.5365257628814406, 0.2595997771380805, 0.8555665722379606, -1.914473990683231, -1.3540943979837314, -1.4406827936248134, -0.8046178999058382, 0.12181867321575096, -0.35090292792293687, 2.6264452716475803, -0.22742851609829987, 0.34583952196375284, -0.4246207479976524, 1.4765256335633001, 0.6858994378513421, 0.1453586741425176, -0.8190357515657618, -1.5921354166666268, 9.394453308311814, -5.012271062271069, -1.586047868220814, 0.12938636363636105, 0.19360477940583554, -0.42546886342278556, 5.331644893629805, 2.6195590847497705]
b = [0.020919478431030758, 2.7755575615628914e-17, 0.1370810614871094, -0.009097008221421121, 0.022780242484848556, 5.551115123125783e-17, 0.6969589054157137, 0.09559161823187545, -1.3877787807814457e-17, 0.18624468468468502, -0.4546325388918695, 0.008750221304219596, 0.11729091386232526, 2.7755575615628914e-17, 0.052419564436121946, -0.02768081010963286, 0.8398892238081876, 0.1592805695142372, 4.770003717472122, 0.010670485242622263, 4.428073637292236, 8.108317280453255, 19.522523291925477, 13.653430060717147, 18.948904054275232, 11.27271557408038, 1.2899621313801302, 7.884839884442773, 5.741980531044579, 6.402262336867576, 0.1669724548956193, 16.907102866733066, 6.187704586465079, -2.5112648344784407, 1.7255903782619102, 16.33479749478079, 25.60550624999975, -15.633733283337005, 40.64775274725278, 33.130644798234414, 2.09050000000006, 4.176339930119487, 20.390390696453444, 13.541514811052004, -6.28701969027148]

A = [(102900011034330, -1514.5500000000002), (106949711300259, -1461.3636363636365), (102900011035740, -729.4999999999999), (106971533450003, -537.2399999999999), (102900011033982, 10.006775800711743), (102900011030929, 10.933689205219455), (102900011036686, 11.18540925266904), (102900011032237, 11.51814946619217), (102900011013274, 30.347576301615796), (102900005115984, 43.610302794242166), (102900011007969, 51.807404734484976), (102900005115908, 69.36432677165355), (102900011018132, 71.04413259195894), (102900051000463, 74.05579404553416), (102900011031926, 90.6600237247924), (102900011006948, 90.7297709062003), (102900011034439, 119.20427046263343), (102900005118817, 123.19987435750998), (102900011032732, 125.58805551601422), (102900005115779, 126.46639157894735), (102900011032343, 202.02186631079482), (102900011001691, 227.5532288037166), (102900011023464, 236.30776055734188), (102900005116509, 239.1854588528678), (102900005119975, 247.6743363881402), (102900011008164, 254.61074250681193), (102900005115823, 263.60866269545795), (102900005115762, 288.15843630137), (102900011032022, 292.98090154211167), (102900011032848, 323.7997627520761), (102900005118824, 328.6780138053096), (102900005115946, 351.32477942511343), (102900011030110, 364.0865954922896), (102900011035078, 398.1338493475682), (102900011034026, 414.8015533807829), (102900005115786, 457.5711093502377), (102900011032251, 550.7315539739024), (102900011022764, 567.2896762711863), (102900051000944, 722.2757028199566), (102900011000328, 767.8920010893247), (102900005116257, 818.247402366864), (102900011030097, 912.8115065243177), (102900011016701, 938.714863829787), (102900011031100, 1074.1449584816114), (102900005115250, 1085.8744897959186), (102900005116899, 1184.05722907489), (102900005116714, 1569.4501355932207), (102900011030059, 1574.5763938315533), (102900005118831, 1869.797297297298)]

print(A[46][0])
# for i in range(0, 45):
#     if k[i] < 0:
#         print(i+4)

x=[]
for i in range(len(data["日期"])):
    if data["单品编码"][i] == A[46][0]:
        x.append(data["批发价格(元/千克)"][i])

# 定义函数
s=0.0926
aver=sum(x)/len(x)
#-5.179564051355554*x+114.5455850657614
z=42
print(k[z])
print(b[z])
def my_function(x):
    if k[z]*x+b[z] <= 2.5 * (1-s):
        return (k[z]*x+b[z])*(x-aver)-aver*(2.5-(k[z]*x+b[z]))
    else:
        return (k[z]*x+b[z])*(x-aver)-aver*((k[z]*x+b[z])/(1-s)-(k[z]*x+b[z]))

# 初始化变量
maximum = float('-inf')
argmax = None

# 求解函数的最大值和对应的 x 值
for x in range(0, 10000):
    if k[z] * x + b[z] >0:
        y = my_function(x)
        if y > maximum:
            maximum = y
            argmax = x

# 输出最大值和对应的 x 值
print("函数的最大值:", maximum)
print("取得最大值时的定价 x 值:", argmax)
print("销量：",k[z]*argmax+b[z])